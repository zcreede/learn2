<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.emr.project.system.mapper.BasDictMedicineMapper">

    <resultMap type="BasDictMedicine" id="BasDictMedicineResult">
        <result property="id"    column="id"    />
        <result property="code"    column="code"    />
        <result property="name"    column="name"    />
        <result property="inputstrphtc"    column="inputstrphtc"    />
        <result property="parentCode"    column="parent_code"    />
        <result property="levelCd"    column="level_cd"    />
        <result property="validFlag"    column="valid_flag"    />
        <result property="remark"    column="remark"    />
        <result property="crePerCode"    column="cre_per_code"    />
        <result property="crePerName"    column="cre_per_name"    />
        <result property="creDate"    column="cre_date"    />
        <result property="altPerCode"    column="alt_per_code"    />
        <result property="altPerName"    column="alt_per_name"    />
        <result property="altDate"    column="alt_date"    />
        <result property="soleDeptCode"    column="sole_dept_code"    />
        <result property="soleDeptName"    column="sole_dept_name"    />
    </resultMap>

    <sql id="selectBasDictMedicineVo">
        select id, code, name, inputstrphtc, parent_code, level_cd, valid_flag, remark, cre_per_code, cre_per_name, cre_date, alt_per_code, alt_per_name, alt_date,sole_dept_code,sole_dept_name from bas_dict_medicine
    </sql>

    <select id="selectBasDictMedicineList" parameterType="BasDictMedicine" resultMap="BasDictMedicineResult">
        <include refid="selectBasDictMedicineVo"/>
        <where>
            <if test="name != null  and name != ''">
            and (
                name like concat(concat('%', #{name}), '%')
                or code like concat(concat('%', #{name}), '%')
                or inputstrphtc like concat(concat('%', #{name}), '%')
                )
            </if>
            <if test="id != null"> and id = #{id}</if>
            <if test="code != null  and code != ''"> and code = #{code}</if>
            <if test="inputstrphtc != null  and inputstrphtc != ''"> and inputstrphtc = #{inputstrphtc}</if>
            <if test="parentCode != null  and parentCode != ''"> and parent_code = #{parentCode}</if>
            <if test="levelCd != null  and levelCd != ''"> and level_cd = #{levelCd}</if>
            <if test="validFlag != null  and validFlag != ''"> and valid_flag = #{validFlag}</if>
            <if test="crePerCode != null  and crePerCode != ''"> and cre_per_code = #{crePerCode}</if>
            <if test="crePerName != null  and crePerName != ''"> and cre_per_name like concat(concat('%', #{crePerName}), '%')</if>
            <if test="creDate != null "> and cre_date = #{creDate}</if>
            <if test="altPerCode != null  and altPerCode != ''"> and alt_per_code = #{altPerCode}</if>
            <if test="altPerName != null  and altPerName != ''"> and alt_per_name like concat(concat('%', #{altPerName}), '%')</if>
            <if test="altDate != null "> and alt_date = #{altDate}</if>
            <if test="soleDeptCode != null  and soleDeptCode != ''">
                and sole_dept_code like concat(concat('%', #{soleDeptCode}), '%')
            </if>
            <if test="soleDeptCodeId != null  and soleDeptCodeId != ''">
                and id != #{soleDeptCodeId}
            </if>
        </where>
    </select>

    <select id="selectBasDictMedicineById" parameterType="Long" resultMap="BasDictMedicineResult">
        <include refid="selectBasDictMedicineVo"/>
        where id = #{id}
    </select>
    <select id="selectBasDictMedicineByName" parameterType="String" resultMap="BasDictMedicineResult">
        <include refid="selectBasDictMedicineVo"/>
        where name = #{name}
    </select>
    <select id="basDictMedicineTreeSelect" parameterType="BasDictMedicine" resultMap="BasDictMedicineResult">
        <include refid="selectBasDictMedicineVo"/>
    </select>
    <insert id="insertBasDictMedicine" parameterType="BasDictMedicine">
        insert into bas_dict_medicine
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="code != null">code,</if>
            <if test="name != null">name,</if>
            <if test="inputstrphtc != null">inputstrphtc,</if>
            <if test="parentCode != null">parent_code,</if>
            <if test="levelCd != null">level_cd,</if>
            <if test="validFlag != null and validFlag != ''">valid_flag,</if>
            <if test="remark != null">remark,</if>
            <if test="crePerCode != null and crePerCode != ''">cre_per_code,</if>
            <if test="crePerName != null and crePerName != ''">cre_per_name,</if>
            <if test="soleDeptCode != null and soleDeptCode != ''">sole_dept_code,</if>
            <if test="soleDeptName != null and soleDeptName != ''">sole_dept_name,</if>
            cre_date,
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="code != null">#{code},</if>
            <if test="name != null">#{name},</if>
            <if test="inputstrphtc != null">#{inputstrphtc},</if>
            <if test="parentCode != null">#{parentCode},</if>
            <if test="levelCd != null">#{levelCd},</if>
            <if test="validFlag != null and validFlag != ''">#{validFlag},</if>
            <if test="remark != null">#{remark},</if>
            <if test="crePerCode != null and crePerCode != ''">#{crePerCode},</if>
            <if test="crePerName != null and crePerName != ''">#{crePerName},</if>
            <if test="soleDeptCode != null and soleDeptCode != ''">#{soleDeptCode},</if>
            <if test="soleDeptName != null and soleDeptName != ''">#{soleDeptName},</if>
            sysdate,
         </trim>
    </insert>

    <update id="updateBasDictMedicine" parameterType="BasDictMedicine">
        update bas_dict_medicine
        <trim prefix="SET" suffixOverrides=",">
            <if test="code != null">code = #{code},</if>
            <if test="name != null">name = #{name},</if>
            <if test="inputstrphtc != null">inputstrphtc = #{inputstrphtc},</if>
            <if test="parentCode != null">parent_code = #{parentCode},</if>
            <if test="levelCd != null">level_cd = #{levelCd},</if>
            <if test="validFlag != null and validFlag != ''">valid_flag = #{validFlag},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="altPerCode != null and altPerCode != ''">alt_per_code = #{altPerCode},</if>
            <if test="altPerName != null and altPerName != ''">alt_per_name = #{altPerName},</if>
            <if test="soleDeptCode != null">sole_dept_code = #{soleDeptCode},</if>
            <if test="soleDeptName != null">sole_dept_name = #{soleDeptName},</if>
            alt_date = sysdate,
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBasDictMedicineById" parameterType="Long">
        delete from bas_dict_medicine where id = #{id}
    </delete>

    <delete id="deleteBasDictMedicineByParentCode" parameterType="String">
        delete from bas_dict_medicine where parent_code = #{parentCode}
    </delete>

    <delete id="deleteBasDictMedicineByIds" parameterType="String">
        delete from bas_dict_medicine where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <select id="selectListByIds" parameterType="Long" resultMap="BasDictMedicineResult">
        <include refid="selectBasDictMedicineVo"/>
        where id in
        <if test="list != null and list.size != 0">
            <foreach collection="list" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </select>
    <select id="selectListByCodes" parameterType="Long" resultMap="BasDictMedicineResult">
        <include refid="selectBasDictMedicineVo"/>
        where code in
        <if test="list != null and list.size != 0">
            <foreach collection="list" item="code" open="(" separator="," close=")">
                #{code}
            </foreach>
        </if>
    </select>
</mapper>
