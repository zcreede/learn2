<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.emr.project.tmpl.mapper.ElemPhysignMapper">

    <resultMap type="ElemPhysign" id="ElemPhysignResult">
        <result property="id"    column="id"    />
        <result property="tempId"    column="temp_id"    />
        <result property="tempName"    column="temp_name"    />
        <result property="tempType"    column="temp_type"    />
        <result property="contElemName"    column="cont_elem_name"    />
        <result property="elemId"    column="elem_id"    />
        <result property="elemName"    column="elem_name"    />
        <result property="elemCd"    column="elem_cd"    />
        <result property="typeFlag"    column="type_flag"    />
        <result property="contType"    column="cont_type"    />
        <result property="creDate"    column="cre_date"    />
        <result property="crePerName"    column="cre_per_name"    />
        <result property="altDate"    column="alt_date"    />
        <result property="altPerName"    column="alt_per_name"    />
    </resultMap>

    <sql id="selectElemPhysignVo">
        select id, temp_id, temp_name, temp_type, cont_elem_name, elem_id, elem_name, elem_cd, type_flag, cont_type, cre_date, cre_per_name, alt_date, alt_per_name from tmpl_elem_physign
    </sql>

    <select id="selectElemPhysignList" parameterType="ElemPhysign" resultMap="ElemPhysignResult">
        <include refid="selectElemPhysignVo"/>
        <where>
            <if test="tempId != null "> and temp_id = #{tempId}</if>
            <if test="tempName != null  and tempName != ''"> and temp_name like concat(concat('%', #{tempName}), '%')</if>
            <if test="tempType != null  and tempType != ''"> and temp_type = #{tempType}</if>
            <if test="contElemName != null  and contElemName != ''"> and cont_elem_name like concat(concat('%', #{contElemName}), '%')</if>
            <if test="elemId != null "> and elem_id = #{elemId}</if>
            <if test="elemName != null  and elemName != ''"> and elem_name like concat(concat('%', #{elemName}), '%')</if>
            <if test="elemCd != null  and elemCd != ''"> and elem_cd = #{elemCd}</if>
            <if test="typeFlag != null  and typeFlag != ''"> and type_flag = #{typeFlag}</if>
            <if test="contType != null  and contType != ''"> and cont_type = #{contType}</if>
            <if test="creDate != null "> and cre_date = #{creDate}</if>
            <if test="crePerName != null  and crePerName != ''"> and cre_per_name like concat(concat('%', #{crePerName}), '%')</if>
            <if test="altDate != null "> and alt_date = #{altDate}</if>
            <if test="altPerName != null  and altPerName != ''"> and alt_per_name like concat(concat('%', #{altPerName}), '%')</if>
        </where>
    </select>

    <select id="selectElemPhysignById" parameterType="Long" resultMap="ElemPhysignResult">
        <include refid="selectElemPhysignVo"/>
        where id = #{id}
    </select>

    <insert id="insertElemPhysign" parameterType="ElemPhysign">
        insert into tmpl_elem_physign
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="tempId != null">temp_id,</if>
            <if test="tempName != null">temp_name,</if>
            <if test="tempType != null">temp_type,</if>
            <if test="contElemName != null">cont_elem_name,</if>
            <if test="elemId != null">elem_id,</if>
            <if test="elemName != null">elem_name,</if>
            <if test="elemCd != null">elem_cd,</if>
            <if test="typeFlag != null">type_flag,</if>
            <if test="contType != null">cont_type,</if>
            <if test="crePerName != null">cre_per_name,</if>
            <if test="altDate != null">alt_date,</if>
            <if test="altPerName != null">alt_per_name,</if>
            cre_date,
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="tempId != null">#{tempId},</if>
            <if test="tempName != null">#{tempName},</if>
            <if test="tempType != null">#{tempType},</if>
            <if test="contElemName != null">#{contElemName},</if>
            <if test="elemId != null">#{elemId},</if>
            <if test="elemName != null">#{elemName},</if>
            <if test="elemCd != null">#{elemCd},</if>
            <if test="typeFlag != null">#{typeFlag},</if>
            <if test="contType != null">#{contType},</if>
            <if test="crePerName != null">#{crePerName},</if>
            <if test="altDate != null">#{altDate},</if>
            <if test="altPerName != null">#{altPerName},</if>
            sysdate,
         </trim>
    </insert>

    <insert id="insertElemPhysignList" parameterType="java.util.List">
        insert into tmpl_elem_physign
        (id,temp_id,temp_name,temp_type,cont_elem_name,elem_id,elem_name,elem_cd,type_flag,cont_type,cre_per_name,cre_date)
        <foreach collection ="list" item="elemPhysignList" index= "index" separator="union all" >
            select #{elemPhysignList.id,jdbcType=NUMERIC},
            #{elemPhysignList.tempId,jdbcType=NUMERIC},
            #{elemPhysignList.tempName,jdbcType=VARCHAR},
            #{elemPhysignList.tempType,jdbcType=VARCHAR},
            #{elemPhysignList.contElemName,jdbcType=VARCHAR},
            #{elemPhysignList.elemId,jdbcType=NUMERIC},
            #{elemPhysignList.elemName,jdbcType=VARCHAR},
            #{elemPhysignList.elemCd,jdbcType=VARCHAR},
            #{elemPhysignList.typeFlag,jdbcType=VARCHAR},
            #{elemPhysignList.contType,jdbcType=VARCHAR},
            #{elemPhysignList.crePerName,jdbcType=VARCHAR},
            sysdate from dual
        </foreach >
    </insert>

    <insert id="insertElemPhysignStandardList" parameterType="java.util.List">
        insert into tmpl_elem_physign_standard
        (id,temp_id,temp_name,temp_type,cont_elem_name,elem_id,elem_name,elem_cd,type_flag,cont_type,cre_per_name,cre_date)
        <foreach collection ="list" item="elemPhysignList" index= "index" separator="union all" >
            select #{elemPhysignList.id,jdbcType=NUMERIC},
            #{elemPhysignList.tempId,jdbcType=NUMERIC},
            #{elemPhysignList.tempName,jdbcType=VARCHAR},
            #{elemPhysignList.tempType,jdbcType=VARCHAR},
            #{elemPhysignList.contElemName,jdbcType=VARCHAR},
            #{elemPhysignList.elemId,jdbcType=NUMERIC},
            #{elemPhysignList.elemName,jdbcType=VARCHAR},
            #{elemPhysignList.elemCd,jdbcType=VARCHAR},
            #{elemPhysignList.typeFlag,jdbcType=VARCHAR},
            #{elemPhysignList.contType,jdbcType=VARCHAR},
            #{elemPhysignList.crePerName,jdbcType=VARCHAR},
            sysdate from dual
        </foreach >
    </insert>

    <update id="updateElemPhysign" parameterType="ElemPhysign">
        update tmpl_elem_physign
        <trim prefix="SET" suffixOverrides=",">
            <if test="tempId != null">temp_id = #{tempId},</if>
            <if test="tempName != null">temp_name = #{tempName},</if>
            <if test="tempType != null">temp_type = #{tempType},</if>
            <if test="contElemName != null">cont_elem_name = #{contElemName},</if>
            <if test="elemId != null">elem_id = #{elemId},</if>
            <if test="elemName != null">elem_name = #{elemName},</if>
            <if test="elemCd != null">elem_cd = #{elemCd},</if>
            <if test="typeFlag != null">type_flag = #{typeFlag},</if>
            <if test="contType != null">cont_type = #{contType},</if>
            <if test="creDate != null">cre_date = #{creDate},</if>
            <if test="crePerName != null">cre_per_name = #{crePerName},</if>
            <if test="altPerName != null">alt_per_name = #{altPerName},</if>
            alt_date = sysdate
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteElemPhysignById" parameterType="Long">
        delete from tmpl_elem_physign where id = #{id}
    </delete>

    <delete id="deleteElemPhysignByTempId" parameterType="Long">
        delete from tmpl_elem_physign where temp_id = #{tempId}
    </delete>

    <delete id="deleteElemPhysignStandardByTempId" parameterType="Long">
        delete from tmpl_elem_physign_standard where temp_id = #{tempId}
    </delete>

    <delete id="deleteElemPhysignByIds" parameterType="String">
        delete from tmpl_elem_physign where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectElemPhysignListByTempId" parameterType="Long" resultMap="ElemPhysignResult">
        <include refid="selectElemPhysignVo"/>
        where temp_id = #{tempId}
    </select>
</mapper>
